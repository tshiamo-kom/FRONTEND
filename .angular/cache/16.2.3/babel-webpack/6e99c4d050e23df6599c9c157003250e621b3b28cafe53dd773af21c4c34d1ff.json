{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../task-service.service\";\nfunction TaskDisplayComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function TaskDisplayComponent_div_0_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const task_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.ondelete(task_r1._task));\n    });\n    i0.ɵɵtext(3, \"Delete\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\" \", task_r1.task, \" \", task_r1.description, \" \", task_r1.status, \"\\n\");\n  }\n}\nexport class TaskDisplayComponent {\n  constructor(taskservice) {\n    this.taskservice = taskservice;\n    this.tasks = [];\n  }\n  ngOnInit() {\n    this.taskservice.gettask_service();\n    this.tasksubscription = this.taskservice.getUpdateListener().subscribe(tasks => {\n      this.tasks = tasks;\n    });\n  }\n  ngOnDestroy() {\n    this.tasksubscription.unsubscribe();\n  }\n  ondelete(task) {\n    this.taskservice.deletetask_service(task);\n  }\n}\n_class = TaskDisplayComponent;\n_class.ɵfac = function TaskDisplayComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.TaskServiceService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-task-display\"]],\n  decls: 1,\n  vars: 0,\n  consts: [[4, \"ngFor\"], [3, \"click\"]],\n  template: function TaskDisplayComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, TaskDisplayComponent_div_0_Template, 4, 3, \"div\", 0);\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵlistener","TaskDisplayComponent_div_0_Template_button_click_2_listener","restoredCtx","ɵɵrestoreView","_r3","task_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","ondelete","_task","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate3","task","description","status","TaskDisplayComponent","constructor","taskservice","tasks","ngOnInit","gettask_service","tasksubscription","getUpdateListener","subscribe","ngOnDestroy","unsubscribe","deletetask_service","ɵɵdirectiveInject","i1","TaskServiceService","selectors","decls","vars","consts","template","TaskDisplayComponent_Template","rf","ctx","ɵɵtemplate","TaskDisplayComponent_div_0_Template"],"sources":["C:\\Users\\lab_services_student\\Documents\\OpenSSL-Win64\\bin\\FRONTEND\\src\\app\\tasks\\task-display\\task-display.component.ts","C:\\Users\\lab_services_student\\Documents\\OpenSSL-Win64\\bin\\FRONTEND\\src\\app\\tasks\\task-display\\task-display.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\nimport { TaskServiceService } from \"../task-service.service\";\n\n@Component({\n  selector: 'app-task-display',\n  templateUrl: './task-display.component.html',\n  styleUrls: ['./task-display.component.css']\n})\nexport class TaskDisplayComponent implements OnInit{\n\n  tasks:{task:string, description:string, status:string }[] = [];\n\n  constructor(public taskservice: TaskServiceService) { }\n\n  private tasksubscription!: Subscription;\n\n  ngOnInit() {\n    this.taskservice.gettask_service();\n    this.tasksubscription = this.taskservice.getUpdateListener()\n  .subscribe((tasks:{task:string,description:string,status:string}[])=>\n    {\n      this.tasks = tasks;\n    });\n  }\n\n  ngOnDestroy(){\n    this.tasksubscription.unsubscribe();\n  }\n\n  ondelete(task: string){\n    this.taskservice.deletetask_service(task)\n  }\n}","<div *ngFor=\"let task\">\n    {{task.task}}\n    {{task.description}}\n    {{task.status}}\n<button (click)=\"ondelete(task._task)\">Delete</button>\n</div>"],"mappings":";;;;;;ICAAA,EAAA,CAAAC,cAAA,UAAuB;IACnBD,EAAA,CAAAE,MAAA,GAGJ;IAAAF,EAAA,CAAAC,cAAA,gBAAuC;IAA/BD,EAAA,CAAAG,UAAA,mBAAAC,4DAAA;MAAA,MAAAC,WAAA,GAAAL,EAAA,CAAAM,aAAA,CAAAC,GAAA;MAAA,MAAAC,OAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAC,MAAA,GAAAV,EAAA,CAAAW,aAAA;MAAA,OAASX,EAAA,CAAAY,WAAA,CAAAF,MAAA,CAAAG,QAAA,CAAAL,OAAA,CAAAM,KAAA,CAAoB;IAAA,EAAC;IAACd,EAAA,CAAAE,MAAA,aAAM;IAAAF,EAAA,CAAAe,YAAA,EAAS;;;;IAHlDf,EAAA,CAAAgB,SAAA,GAGJ;IAHIhB,EAAA,CAAAiB,kBAAA,MAAAT,OAAA,CAAAU,IAAA,OAAAV,OAAA,CAAAW,WAAA,OAAAX,OAAA,CAAAY,MAAA,OAGJ;;;ADKA,OAAM,MAAOC,oBAAoB;EAI/BC,YAAmBC,WAA+B;IAA/B,KAAAA,WAAW,GAAXA,WAAW;IAF9B,KAAAC,KAAK,GAAuD,EAAE;EAER;EAItDC,QAAQA,CAAA;IACN,IAAI,CAACF,WAAW,CAACG,eAAe,EAAE;IAClC,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACJ,WAAW,CAACK,iBAAiB,EAAE,CAC7DC,SAAS,CAAEL,KAAsD,IAAG;MAEjE,IAAI,CAACA,KAAK,GAAGA,KAAK;IACpB,CAAC,CAAC;EACJ;EAEAM,WAAWA,CAAA;IACT,IAAI,CAACH,gBAAgB,CAACI,WAAW,EAAE;EACrC;EAEAlB,QAAQA,CAACK,IAAY;IACnB,IAAI,CAACK,WAAW,CAACS,kBAAkB,CAACd,IAAI,CAAC;EAC3C;;SAvBWG,oBAAoB;;mBAApBA,MAAoB,EAAArB,EAAA,CAAAiC,iBAAA,CAAAC,EAAA,CAAAC,kBAAA;AAAA;;QAApBd,MAAoB;EAAAe,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCTjC1C,EAAA,CAAA4C,UAAA,IAAAC,mCAAA,iBAKM"},"metadata":{},"sourceType":"module","externalDependencies":[]}