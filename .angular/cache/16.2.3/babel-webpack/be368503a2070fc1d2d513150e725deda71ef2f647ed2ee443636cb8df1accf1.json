{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TaskServiceService {\n  constructor(http) {\n    this.http = http;\n  }\n  addtask_service(pid, pname) {\n    this.http.post;\n  }\n}\n_class = TaskServiceService;\n_class.ɵfac = function TaskServiceService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["TaskServiceService","constructor","http","addtask_service","pid","pname","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\lab_services_student\\Documents\\OpenSSL-Win64\\bin\\FRONTEND\\src\\app\\tasks\\task-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core'; \nimport { HttpClient } from '@angular/common/http';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskServiceService {\n\n  constructor(private http: HttpClient) { }\n\n  addtask_service(pid:string, pname:string){\n    this.http.post\n  }\n}\n"],"mappings":";;;AAOA,OAAM,MAAOA,kBAAkB;EAE7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,eAAeA,CAACC,GAAU,EAAEC,KAAY;IACtC,IAAI,CAACH,IAAI,CAACI,IAAI;EAChB;;SANWN,kBAAkB;;mBAAlBA,MAAkB,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAlBV,MAAkB;EAAAW,OAAA,EAAlBX,MAAkB,CAAAY,IAAA;EAAAC,UAAA,EAFjB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}