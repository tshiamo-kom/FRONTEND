{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../auth-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\nexport class LoginComponent {\n  constructor(authservice, router) {\n    this.authservice = authservice;\n    this.router = router;\n    this.option = this.router.url;\n  }\n  ngOnInit() {}\n  onlogin(loginform) {\n    if (loginform.invalid) {\n      return;\n    }\n    if (this.option == '/login') {\n      this.authservice.login(loginform.value.enteredusername, loginform.value.enteredpassword);\n    } else {\n      this.authservice.signup(loginform.value.enteredusername, loginform.value.enteredpassword);\n    }\n  }\n}\n_class = LoginComponent;\n_class.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.AuthServiceService), i0.ɵɵdirectiveInject(i2.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-login\"]],\n  decls: 9,\n  vars: 2,\n  consts: [[3, \"submit\"], [\"loginform\", \"ngForm\"], [\"type\", \"text\", \"ngModel\", \"\", \"name\", \"enteredusername\", \"placeholder\", \"username\", \"required\", \"\", \"minlength\", \"1\", \"pattern\", \"^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$\"], [\"enteredusername\", \"ngModel\"], [4, \"ngIf\"], [\"type\", \"password\", \"ngModel\", \"\", \"name\", \"enteredpassword\", \"placeholder\", \"password\", \"required\", \"\", \"minlength\", \"1\", \"pattern\", \"^([a-zA-Z0-9@*#]{8,15})\"], [\"enteredpassword\", \"ngModel\"], [\"type\", \"submit\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r4 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"form\", 0, 1);\n      i0.ɵɵlistener(\"submit\", function LoginComponent_Template_form_submit_0_listener() {\n        i0.ɵɵrestoreView(_r4);\n        const _r0 = i0.ɵɵreference(1);\n        return i0.ɵɵresetView(ctx.onlogin(_r0));\n      });\n      i0.ɵɵelement(2, \"input\", 2, 3);\n      i0.ɵɵtemplate(4, LoginComponent_div_4_Template, 1, 0, \"div\", 4);\n      i0.ɵɵelement(5, \"input\", 5, 6);\n      i0.ɵɵelementStart(7, \"button\", 7);\n      i0.ɵɵtext(8);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(3);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", _r1.invalid && (_r1.dirty || _r1.touched));\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.option);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.MinLengthValidator, i4.PatternValidator, i4.NgModel, i4.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelement","LoginComponent","constructor","authservice","router","option","url","ngOnInit","onlogin","loginform","invalid","login","value","enteredusername","enteredpassword","signup","ɵɵdirectiveInject","i1","AuthServiceService","i2","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","LoginComponent_Template_form_submit_0_listener","ɵɵrestoreView","_r4","_r0","ɵɵreference","ɵɵresetView","ɵɵtemplate","LoginComponent_div_4_Template","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","_r1","dirty","touched","ɵɵtextInterpolate"],"sources":["C:\\Users\\lab_services_student\\Documents\\OpenSSL-Win64\\bin\\FRONTEND\\src\\app\\auth\\login\\login\\login.component.ts","C:\\Users\\lab_services_student\\Documents\\OpenSSL-Win64\\bin\\FRONTEND\\src\\app\\auth\\login\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router} from '@angular/router';\nimport { AuthServiceService } from '../../auth-service.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(public authservice: AuthServiceService, private router: Router){}\n\n  option: string = this.router.url;\n\n  ngOnInit(): void {\n    \n  }\n\n  onlogin(loginform: NgForm) {\n  if (loginform.invalid){\n    return;\n  }\n\n  if (this.option == '/login'){\n    this.authservice.login(loginform.value.enteredusername, loginform.value.enteredpassword)\n  }else{\n    this.authservice.signup(loginform.value.enteredusername, loginform.value.enteredpassword)\n  }\n}\n\n}\n","<form (submit)=\"onlogin(loginform)\" #loginform=\"ngForm\">\n    <input type=\"text\"\n    ngModel name=\"enteredusername\"\n    placeholder=\"username\"\n    required\n    minlength=\"1\"\n    pattern=\"^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$\"\n    #enteredusername=\"ngModel\"/>\n    <div *ngIf=\"enteredusername.invalid && (enteredusername.dirty || enteredusername.touched)\"></div>\n    <input type=\"password\"\n    ngModel name=\"enteredpassword\"\n    placeholder=\"password\"\n    required\n    minlength=\"1\"\n    pattern=\"^([a-zA-Z0-9@*#]{8,15})\"  \n    #enteredpassword=\"ngModel\"/>  \n\n  <button type=\"submit\">{{option}}</button>\n</form>\n"],"mappings":";;;;;;;;ICQIA,EAAA,CAAAC,SAAA,UAAiG;;;ADErG,OAAM,MAAOC,cAAc;EAEzBC,YAAmBC,WAA+B,EAAUC,MAAc;IAAvD,KAAAD,WAAW,GAAXA,WAAW;IAA8B,KAAAC,MAAM,GAANA,MAAM;IAElE,KAAAC,MAAM,GAAW,IAAI,CAACD,MAAM,CAACE,GAAG;EAF4C;EAI5EC,QAAQA,CAAA,GAER;EAEAC,OAAOA,CAACC,SAAiB;IACzB,IAAIA,SAAS,CAACC,OAAO,EAAC;MACpB;;IAGF,IAAI,IAAI,CAACL,MAAM,IAAI,QAAQ,EAAC;MAC1B,IAAI,CAACF,WAAW,CAACQ,KAAK,CAACF,SAAS,CAACG,KAAK,CAACC,eAAe,EAAEJ,SAAS,CAACG,KAAK,CAACE,eAAe,CAAC;KACzF,MAAI;MACH,IAAI,CAACX,WAAW,CAACY,MAAM,CAACN,SAAS,CAACG,KAAK,CAACC,eAAe,EAAEJ,SAAS,CAACG,KAAK,CAACE,eAAe,CAAC;;EAE7F;;SApBab,cAAc;;mBAAdA,MAAc,EAAAF,EAAA,CAAAiB,iBAAA,CAAAC,EAAA,CAAAC,kBAAA,GAAAnB,EAAA,CAAAiB,iBAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;;QAAdnB,MAAc;EAAAoB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;MCV3B5B,EAAA,CAAA8B,cAAA,iBAAwD;MAAlD9B,EAAA,CAAA+B,UAAA,oBAAAC,+CAAA;QAAAhC,EAAA,CAAAiC,aAAA,CAAAC,GAAA;QAAA,MAAAC,GAAA,GAAAnC,EAAA,CAAAoC,WAAA;QAAA,OAAUpC,EAAA,CAAAqC,WAAA,CAAAR,GAAA,CAAApB,OAAA,CAAA0B,GAAA,CAAkB;MAAA,EAAC;MAC/BnC,EAAA,CAAAC,SAAA,kBAM4B;MAC5BD,EAAA,CAAAsC,UAAA,IAAAC,6BAAA,iBAAiG;MACjGvC,EAAA,CAAAC,SAAA,kBAM4B;MAE9BD,EAAA,CAAA8B,cAAA,gBAAsB;MAAA9B,EAAA,CAAAwC,MAAA,GAAU;MAAAxC,EAAA,CAAAyC,YAAA,EAAS;;;;MATjCzC,EAAA,CAAA0C,SAAA,GAAmF;MAAnF1C,EAAA,CAAA2C,UAAA,SAAAC,GAAA,CAAAjC,OAAA,KAAAiC,GAAA,CAAAC,KAAA,IAAAD,GAAA,CAAAE,OAAA,EAAmF;MASrE9C,EAAA,CAAA0C,SAAA,GAAU;MAAV1C,EAAA,CAAA+C,iBAAA,CAAAlB,GAAA,CAAAvB,MAAA,CAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}