{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let TaskCreateComponent = class TaskCreateComponent {\n  get taskService() {\n    return this._taskService;\n  }\n  set taskService(value) {\n    this._taskService = value;\n  }\n  constructor(_taskService) {\n    this._taskService = _taskService;\n  }\n  onaddtask(taskform) {\n    if (taskform.invalid) {\n      alert('Invalid input');\n      return;\n    }\n    alert(taskform.value.task + '\\n' + taskform.value.description + '\\n' + taskform.value.status);\n    this.taskService.addtask_service(taskform.value.task, taskform.value.description, taskform.value.status);\n  }\n};\nTaskCreateComponent = __decorate([Component({\n  selector: 'app-task-create',\n  templateUrl: './task-create.component.html',\n  styleUrls: ['./task-create.component.css']\n})], TaskCreateComponent);","map":{"version":3,"names":["Component","TaskCreateComponent","taskService","_taskService","value","constructor","onaddtask","taskform","invalid","alert","task","description","status","addtask_service","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\lab_services_student\\Documents\\OpenSSL-Win64\\bin\\FRONTEND\\src\\app\\tasks\\task-create\\task-create.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms'; \nimport { TaskServiceService } from '../task-service.service'; \n\n@Component({\n  selector: 'app-task-create',\n  templateUrl: './task-create.component.html',\n  styleUrls: ['./task-create.component.css']\n})\nexport class TaskCreateComponent {\n  public get taskService(): TaskServiceService {\n    return this._taskService;\n  }\n  public set taskService(value: TaskServiceService) {\n    this._taskService = value;\n  }\n\n  constructor(private _taskService: TaskServiceService){}\n  onaddtask(taskform: NgForm){\n    if(taskform.invalid){\n      alert('Invalid input')\n      return\n    }\n    alert(taskform.value.task+'\\n'+taskform.value.description+'\\n'+taskform.value.status)\n    this.taskService.addtask_service(taskform.value.task,taskform.value.description,taskform.value.status)\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,WAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAC9B,IAAWC,WAAWA,CAAA;IACpB,OAAO,IAAI,CAACC,YAAY;EAC1B;EACA,IAAWD,WAAWA,CAACE,KAAyB;IAC9C,IAAI,CAACD,YAAY,GAAGC,KAAK;EAC3B;EAEAC,YAAoBF,YAAgC;IAAhC,KAAAA,YAAY,GAAZA,YAAY;EAAsB;EACtDG,SAASA,CAACC,QAAgB;IACxB,IAAGA,QAAQ,CAACC,OAAO,EAAC;MAClBC,KAAK,CAAC,eAAe,CAAC;MACtB;;IAEFA,KAAK,CAACF,QAAQ,CAACH,KAAK,CAACM,IAAI,GAAC,IAAI,GAACH,QAAQ,CAACH,KAAK,CAACO,WAAW,GAAC,IAAI,GAACJ,QAAQ,CAACH,KAAK,CAACQ,MAAM,CAAC;IACrF,IAAI,CAACV,WAAW,CAACW,eAAe,CAACN,QAAQ,CAACH,KAAK,CAACM,IAAI,EAACH,QAAQ,CAACH,KAAK,CAACO,WAAW,EAACJ,QAAQ,CAACH,KAAK,CAACQ,MAAM,CAAC;EACxG;CACD;AAjBYX,mBAAmB,GAAAa,UAAA,EAL/Bd,SAAS,CAAC;EACTe,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,C,EACWhB,mBAAmB,CAiB/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}