{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth-service.service\";\nexport class AuthInterceptor {\n  constructor(authservice) {\n    this.authservice = authservice;\n  }\n  intercept(request, next) {\n    const authToken = this.authservice.getToken();\n    const authRequest = request.clone({\n      headers: request.headers.set(\"Authorization\", \"Bearer \" + authToken)\n    });\n    return next.handle(authRequest);\n  }\n}\n_class = AuthInterceptor;\n_class.ɵfac = function AuthInterceptor_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.AuthServiceService));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac\n});","map":{"version":3,"names":["AuthInterceptor","constructor","authservice","intercept","request","next","authToken","getToken","authRequest","clone","headers","set","handle","i0","ɵɵinject","i1","AuthServiceService","factory","ɵfac"],"sources":["C:\\Users\\lab_services_student\\Documents\\OpenSSL-Win64\\bin\\FRONTEND\\src\\app\\auth\\auth-interceptor.interceptor.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport {\n    HttpRequest,\n    HttpHandler,\n    HttpEvent,\n    HttpInterceptor\n} from '@angular/common/http'\nimport { AuthServiceService } from \"./auth-service.service\";\nimport { Observable } from \"rxjs\";\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n    constructor(private authservice: AuthServiceService) {}\n\n    intercept(request: HttpRequest<unknown>, next: HttpHandler) {\n        const authToken = this.authservice.getToken();\n        const authRequest =\n            request.clone({headers:request.headers.set(\"Authorization\", \"Bearer \" + authToken)});\n        return next.handle(authRequest);\n    }\n}"],"mappings":";;;AAWA,OAAM,MAAOA,eAAe;EAExBC,YAAoBC,WAA+B;IAA/B,KAAAA,WAAW,GAAXA,WAAW;EAAuB;EAEtDC,SAASA,CAACC,OAA6B,EAAEC,IAAiB;IACtD,MAAMC,SAAS,GAAG,IAAI,CAACJ,WAAW,CAACK,QAAQ,EAAE;IAC7C,MAAMC,WAAW,GACbJ,OAAO,CAACK,KAAK,CAAC;MAACC,OAAO,EAACN,OAAO,CAACM,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,SAAS,GAAGL,SAAS;IAAC,CAAC,CAAC;IACxF,OAAOD,IAAI,CAACO,MAAM,CAACJ,WAAW,CAAC;EACnC;;SATSR,eAAe;;mBAAfA,MAAe,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,kBAAA;AAAA;;SAAfhB,MAAe;EAAAiB,OAAA,EAAfjB,MAAe,CAAAkB;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}