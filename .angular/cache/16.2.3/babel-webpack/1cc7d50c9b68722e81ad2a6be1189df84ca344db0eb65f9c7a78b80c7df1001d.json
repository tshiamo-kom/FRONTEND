{"ast":null,"code":"var _class;\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TaskServiceService {\n  constructor(http) {\n    this.http = http;\n    this.taskdisplay = [];\n    this.updatedtaskdisplay = new Subject();\n  }\n  addtask_service(pid, pname) {\n    this.http.post('https://localhost:3000/api/tasks', {\n      id: pid,\n      name: pname\n    }).subscribe(thetask => {\n      this.taskdisplay.push(thetask.task);\n      this.updatedtaskdisplay.next([...this.taskdisplay]);\n    });\n  }\n  gettask_service() {\n    this.http.get('https://localhost:3000/api/tasks').subscribe(thetask => {\n      this.taskdisplay = thetask.task;\n      this.updatedtaskdisplay.next([...this.taskdisplay]);\n    });\n  }\n  deletetask_service(task) {\n    this.http.delete('https:/localhost:3000/api/tasks/' + task).subscribe(() => {\n      const updatedtaskdeleted = this.taskdisplay.filter(task => task !== task);\n      this.taskdisplay = updatedtaskdeleted;\n      this.updatedtaskdisplay.next([...this.taskdisplay]);\n    });\n  }\n  getUpdateListener() {\n    return this.updatedtaskdisplay.asObservable();\n  }\n}\n_class = TaskServiceService;\n_class.ɵfac = function TaskServiceService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["Subject","TaskServiceService","constructor","http","taskdisplay","updatedtaskdisplay","addtask_service","pid","pname","post","id","name","subscribe","thetask","push","task","next","gettask_service","get","deletetask_service","delete","updatedtaskdeleted","filter","getUpdateListener","asObservable","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\lab_services_student\\Documents\\OpenSSL-Win64\\bin\\FRONTEND\\src\\app\\tasks\\task-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core'; \nimport { HttpClient } from '@angular/common/http';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskServiceService {\n\n  private taskdisplay:{task:string,description:string,status:string}[] = [];\n  private updatedtaskdisplay = new Subject<{task:string,description:string,status:string}[]>();\n  \n  constructor(private http: HttpClient) { }\n\n  addtask_service(pid:string, pname:string){\n    this.http.post<{message:string, task:any}>('https://localhost:3000/api/tasks',{id:pid,name:pname})\n    .subscribe((thetask)=>\n    {\n      this.taskdisplay.push(thetask.task);\n      this.updatedtaskdisplay.next([...this.taskdisplay])\n    })\n  }\n\n  gettask_service() {\n    this.http.get<{message:string,task:any}>('https://localhost:3000/api/tasks')\n    .subscribe((thetask)=>\n    {\n      this.taskdisplay = thetask.task\n      this.updatedtaskdisplay.next([...this.taskdisplay]);\n    })\n  }\n\n  deletetask_service(task: string) {\n    this.http.delete('https:/localhost:3000/api/tasks/' + task)\n    .subscribe(()=>\n    {\n      const updatedtaskdeleted = this.taskdisplay.filter(task=>task!==task);\n      this.taskdisplay = updatedtaskdeleted;\n      this.updatedtaskdisplay.next([...this.taskdisplay]);\n    })\n  }\n\n  getUpdateListener() {\n    return this.updatedtaskdisplay.asObservable()\n  }\n  \n\n}\n"],"mappings":";AAEA,SAASA,OAAO,QAAQ,MAAM;;;AAK9B,OAAM,MAAOC,kBAAkB;EAK7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHhB,KAAAC,WAAW,GAAoD,EAAE;IACjE,KAAAC,kBAAkB,GAAG,IAAIL,OAAO,EAAoD;EAEpD;EAExCM,eAAeA,CAACC,GAAU,EAAEC,KAAY;IACtC,IAAI,CAACL,IAAI,CAACM,IAAI,CAA6B,kCAAkC,EAAC;MAACC,EAAE,EAACH,GAAG;MAACI,IAAI,EAACH;IAAK,CAAC,CAAC,CACjGI,SAAS,CAAEC,OAAO,IAAG;MAEpB,IAAI,CAACT,WAAW,CAACU,IAAI,CAACD,OAAO,CAACE,IAAI,CAAC;MACnC,IAAI,CAACV,kBAAkB,CAACW,IAAI,CAAC,CAAC,GAAG,IAAI,CAACZ,WAAW,CAAC,CAAC;IACrD,CAAC,CAAC;EACJ;EAEAa,eAAeA,CAAA;IACb,IAAI,CAACd,IAAI,CAACe,GAAG,CAA4B,kCAAkC,CAAC,CAC3EN,SAAS,CAAEC,OAAO,IAAG;MAEpB,IAAI,CAACT,WAAW,GAAGS,OAAO,CAACE,IAAI;MAC/B,IAAI,CAACV,kBAAkB,CAACW,IAAI,CAAC,CAAC,GAAG,IAAI,CAACZ,WAAW,CAAC,CAAC;IACrD,CAAC,CAAC;EACJ;EAEAe,kBAAkBA,CAACJ,IAAY;IAC7B,IAAI,CAACZ,IAAI,CAACiB,MAAM,CAAC,kCAAkC,GAAGL,IAAI,CAAC,CAC1DH,SAAS,CAAC,MAAI;MAEb,MAAMS,kBAAkB,GAAG,IAAI,CAACjB,WAAW,CAACkB,MAAM,CAACP,IAAI,IAAEA,IAAI,KAAGA,IAAI,CAAC;MACrE,IAAI,CAACX,WAAW,GAAGiB,kBAAkB;MACrC,IAAI,CAAChB,kBAAkB,CAACW,IAAI,CAAC,CAAC,GAAG,IAAI,CAACZ,WAAW,CAAC,CAAC;IACrD,CAAC,CAAC;EACJ;EAEAmB,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAAClB,kBAAkB,CAACmB,YAAY,EAAE;EAC/C;;SArCWvB,kBAAkB;;mBAAlBA,MAAkB,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAlB3B,MAAkB;EAAA4B,OAAA,EAAlB5B,MAAkB,CAAA6B,IAAA;EAAAC,UAAA,EAFjB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}