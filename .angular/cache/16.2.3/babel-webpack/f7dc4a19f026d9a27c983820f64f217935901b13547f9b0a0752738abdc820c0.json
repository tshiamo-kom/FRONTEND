{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthServiceService {\n  constructor(http) {\n    this.http = http;\n  }\n  signup(userusername, userpassword) {\n    this.http.post('https:/localhost:3000/api/users/signup', {\n      username: userusername,\n      password: userpassword\n    }).subscribe(response => {});\n  }\n  login(userusername, userpassword) {\n    this.http.post('https:/localhost:3000/api/users/login', {\n      username: userusername,\n      password: userpassword\n    }).subscribe(response => {\n      const token = response.token;\n      this.token = token;\n    });\n  }\n  getToken() {\n    return this.token;\n  }\n}\n_class = AuthServiceService;\n_class.ɵfac = function AuthServiceService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthServiceService","constructor","http","signup","userusername","userpassword","post","username","password","subscribe","response","login","token","getToken","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\lab_services_student\\Documents\\OpenSSL-Win64\\bin\\FRONTEND\\src\\app\\auth\\auth-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthServiceService {\n\n  private token!: string;\n\n  constructor(private http: HttpClient) { }\n\n  signup (userusername:string, userpassword:string){\n    this.http.post('https:/localhost:3000/api/users/signup', {username:userusername, password:userpassword})\n    .subscribe(response =>{\n\n    });\n  }\n\n  login (userusername:string, userpassword:string){\n    this.http.post<{token: string}>('https:/localhost:3000/api/users/login', {username:userusername, password:userpassword})\n    .subscribe(response =>{\n      const token = response.token\n      this.token = token;\n    });\n  }\n\n  getToken(){\n    return this.token;\n  }\n}\n"],"mappings":";;;AAMA,OAAM,MAAOA,kBAAkB;EAI7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,MAAMA,CAAEC,YAAmB,EAAEC,YAAmB;IAC9C,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,wCAAwC,EAAE;MAACC,QAAQ,EAACH,YAAY;MAAEI,QAAQ,EAACH;IAAY,CAAC,CAAC,CACvGI,SAAS,CAACC,QAAQ,IAAG,CAEtB,CAAC,CAAC;EACJ;EAEAC,KAAKA,CAAEP,YAAmB,EAAEC,YAAmB;IAC7C,IAAI,CAACH,IAAI,CAACI,IAAI,CAAkB,uCAAuC,EAAE;MAACC,QAAQ,EAACH,YAAY;MAAEI,QAAQ,EAACH;IAAY,CAAC,CAAC,CACvHI,SAAS,CAACC,QAAQ,IAAG;MACpB,MAAME,KAAK,GAAGF,QAAQ,CAACE,KAAK;MAC5B,IAAI,CAACA,KAAK,GAAGA,KAAK;IACpB,CAAC,CAAC;EACJ;EAEAC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACD,KAAK;EACnB;;SAvBWZ,kBAAkB;;mBAAlBA,MAAkB,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAlBjB,MAAkB;EAAAkB,OAAA,EAAlBlB,MAAkB,CAAAmB,IAAA;EAAAC,UAAA,EAFjB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}