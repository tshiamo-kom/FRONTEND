{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../auth-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(authservice, router) {\n    this.authservice = authservice;\n    this.router = router;\n    this.option = this.router.url;\n  }\n  ngOnInit() {}\n  onlogin(loginform) {\n    if (loginform.invalid) {\n      return;\n    }\n    if (this.option == '/login') {\n      this.authservice.login(loginform.value.enteredusername, loginform.value.enteredpassword);\n    } else {\n      this.authservice.signup(loginform.value.enteredusername, loginform.value.enteredpassword);\n    }\n  }\n}\n_class = LoginComponent;\n_class.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.AuthServiceService), i0.ɵɵdirectiveInject(i2.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-login\"]],\n  decls: 11,\n  vars: 1,\n  consts: [[3, \"submit\"], [\"loginform\", \"ngForm\"], [\"type\", \"text\", \"ngModel\", \"\", \"name\", \"enteredusername\", \"placeholder\", \"username\", \"required\", \"\", \"minlength\", \"1\", \"pattern\", \"^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$\"], [\"enteredusername\", \"ngModel\"], [\"type\", \"password\", \"ngModel\", \"\", \"name\", \"enteredpassword\", \"placeholder\", \"password\", \"required\", \"\", \"minlength\", \"1\", \"pattern\", \"^([a-zA-Z0-9@*#]{8,15})\"], [\"enteredpassword\", \"ngModel\"], [\"type\", \"submit\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r3 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"form\", 0, 1);\n      i0.ɵɵlistener(\"submit\", function LoginComponent_Template_form_submit_0_listener() {\n        i0.ɵɵrestoreView(_r3);\n        const _r0 = i0.ɵɵreference(1);\n        return i0.ɵɵresetView(ctx.onlogin(_r0));\n      });\n      i0.ɵɵelement(2, \"input\", 2, 3)(4, \"div\")(5, \"br\")(6, \"input\", 4, 5)(8, \"br\");\n      i0.ɵɵelementStart(9, \"button\", 6);\n      i0.ɵɵtext(10);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵtextInterpolate(ctx.option);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.MinLengthValidator, i3.PatternValidator, i3.NgModel, i3.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["LoginComponent","constructor","authservice","router","option","url","ngOnInit","onlogin","loginform","invalid","login","value","enteredusername","enteredpassword","signup","i0","ɵɵdirectiveInject","i1","AuthServiceService","i2","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","LoginComponent_Template_form_submit_0_listener","ɵɵrestoreView","_r3","_r0","ɵɵreference","ɵɵresetView","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate"],"sources":["C:\\Users\\lab_services_student\\Documents\\OpenSSL-Win64\\bin\\FRONTEND\\src\\app\\auth\\login\\login\\login.component.ts","C:\\Users\\lab_services_student\\Documents\\OpenSSL-Win64\\bin\\FRONTEND\\src\\app\\auth\\login\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router} from '@angular/router';\nimport { AuthServiceService } from '../../auth-service.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(public authservice: AuthServiceService, private router: Router){}\n\n  option: string = this.router.url;\n\n  ngOnInit(): void {\n    \n  }\n\n  onlogin(loginform: NgForm) {\n  if (loginform.invalid){\n    return;\n  }\n\n  if (this.option == '/login'){\n    this.authservice.login(loginform.value.enteredusername, loginform.value.enteredpassword)\n  }else{\n    this.authservice.signup(loginform.value.enteredusername, loginform.value.enteredpassword)\n  }\n}\n\n}\n","<form (submit)=\"onlogin(loginform)\" #loginform=\"ngForm\">\n    <input type=\"text\"\n    ngModel name=\"enteredusername\"\n    placeholder=\"username\"\n    required\n    minlength=\"1\"\n    pattern=\"^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$\"\n    #enteredusername=\"ngModel\"/>\n    <div></div>\n    <br>\n    <input type=\"password\"\n    ngModel name=\"enteredpassword\"\n    placeholder=\"password\"\n    required\n    minlength=\"1\"\n    pattern=\"^([a-zA-Z0-9@*#]{8,15})\"  \n    #enteredpassword=\"ngModel\"/>  \n    \n    <br>\n<button type=\"submit\">{{option}}</button>\n</form>\n"],"mappings":";;;;;AAUA,OAAM,MAAOA,cAAc;EAEzBC,YAAmBC,WAA+B,EAAUC,MAAc;IAAvD,KAAAD,WAAW,GAAXA,WAAW;IAA8B,KAAAC,MAAM,GAANA,MAAM;IAElE,KAAAC,MAAM,GAAW,IAAI,CAACD,MAAM,CAACE,GAAG;EAF4C;EAI5EC,QAAQA,CAAA,GAER;EAEAC,OAAOA,CAACC,SAAiB;IACzB,IAAIA,SAAS,CAACC,OAAO,EAAC;MACpB;;IAGF,IAAI,IAAI,CAACL,MAAM,IAAI,QAAQ,EAAC;MAC1B,IAAI,CAACF,WAAW,CAACQ,KAAK,CAACF,SAAS,CAACG,KAAK,CAACC,eAAe,EAAEJ,SAAS,CAACG,KAAK,CAACE,eAAe,CAAC;KACzF,MAAI;MACH,IAAI,CAACX,WAAW,CAACY,MAAM,CAACN,SAAS,CAACG,KAAK,CAACC,eAAe,EAAEJ,SAAS,CAACG,KAAK,CAACE,eAAe,CAAC;;EAE7F;;SApBab,cAAc;;mBAAdA,MAAc,EAAAe,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,kBAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;;QAAdpB,MAAc;EAAAqB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;MCV3BZ,EAAA,CAAAc,cAAA,iBAAwD;MAAlDd,EAAA,CAAAe,UAAA,oBAAAC,+CAAA;QAAAhB,EAAA,CAAAiB,aAAA,CAAAC,GAAA;QAAA,MAAAC,GAAA,GAAAnB,EAAA,CAAAoB,WAAA;QAAA,OAAUpB,EAAA,CAAAqB,WAAA,CAAAR,GAAA,CAAArB,OAAA,CAAA2B,GAAA,CAAkB;MAAA,EAAC;MAC/BnB,EAAA,CAAAsB,SAAA,kBAM4B;MAYhCtB,EAAA,CAAAc,cAAA,gBAAsB;MAAAd,EAAA,CAAAuB,MAAA,IAAU;MAAAvB,EAAA,CAAAwB,YAAA,EAAS;;;MAAnBxB,EAAA,CAAAyB,SAAA,IAAU;MAAVzB,EAAA,CAAA0B,iBAAA,CAAAb,GAAA,CAAAxB,MAAA,CAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}